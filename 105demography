#!/usr/bin/python3
##
## EPITECH PROJECT, 2023
## 105demography
## File description:
## demography maths
##

import sys
import stats

def print_help():
    print("USAGE\n\t./105demography [code]+\n")
    print("DESCRIPTION\n\tcode\tcountry code")

def parse_population(string):
    try:
        return int(string) / 1_000_000
    except:
        return 0

def get_data():
    data = {"countries": []}
    with open("105demography_data.csv", "r") as file:
        data["years"] = [int(i) for i in file.readline().split(";")[2:]]
        line = file.readline().split(";")
        while len(line) > 2:
            data["countries"].append({"name": line[0], "code": line[1],
                "population": [parse_population(i) for i in line[2:]]})
            line = file.readline().split(";")
    return data

def print_stats(s):
    print(f"""Fit1
\tY = {s['xa']:.2f} X {'+' if s['xb'] >= 0 else '-'} {abs(s['xb']):.2f}
\tRoot-mean-square deviation: {s['dx']:.2f}
\tPopulation in 2050: {stats.estimate_y(s, 2050):.2f}
Fit2
\tX = {s['ya']:.2f} Y {'+' if s['yb'] >= 0 else '-'} {abs(s['yb']):.2f}
\tRoot-mean-square deviation: {s['dy']:.2f}
\tPopulation in 2050: {stats.estimate_x(s, 2050):.2f}
Correlation: {s['r']:.4f}""")

def math():
    codes = sys.argv[1:]
    data = get_data()
    countries = [i for i in data["countries"] if i["code"] in codes]
    if len(codes) != len(countries):
        raise Exception("Unrecogniced code")
    names = [i['name'] for i in countries]
    names.sort()
    print(f"Country: {', '.join(names)}")
    total_pop = stats.sum_populations(countries)
    print_stats(stats.make_stats(data["years"], total_pop))

def main():
    argc = len(sys.argv)
    if argc < 2:
        raise Exception("ERROR: Not enough arguments")
    elif argc == 2 and sys.argv[1] == "-h":
        print_help()
    else:
        math()

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(e, file=sys.stderr)
        exit(84)
